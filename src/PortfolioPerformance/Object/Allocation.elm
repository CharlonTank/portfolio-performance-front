-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module PortfolioPerformance.Object.Allocation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import PortfolioPerformance.InputObject
import PortfolioPerformance.Interface
import PortfolioPerformance.Object
import PortfolioPerformance.Scalar
import PortfolioPerformance.ScalarCodecs
import PortfolioPerformance.Union


id : SelectionSet String PortfolioPerformance.Object.Allocation
id =
    Object.selectionForField "String" "id" [] Decode.string


percentage : SelectionSet Int PortfolioPerformance.Object.Allocation
percentage =
    Object.selectionForField "Int" "percentage" [] Decode.int


portfolio_state : SelectionSet decodesTo PortfolioPerformance.Object.PortfolioState -> SelectionSet (Maybe decodesTo) PortfolioPerformance.Object.Allocation
portfolio_state object_ =
    Object.selectionForCompositeField "portfolio_state" [] object_ (identity >> Decode.nullable)


portfolio_state_id : SelectionSet String PortfolioPerformance.Object.Allocation
portfolio_state_id =
    Object.selectionForField "String" "portfolio_state_id" [] Decode.string


symbol : SelectionSet String PortfolioPerformance.Object.Allocation
symbol =
    Object.selectionForField "String" "symbol" [] Decode.string
